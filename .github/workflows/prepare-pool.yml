name: Prepare pool
on:
  workflow_call:
    inputs:
      pool-tag:
        description: "Pool tag"
        required: true
        type: string
      git-ref:
        description: "Commit Id from where the pools should be created"
        required: false
        default: "main"
        type: string
      pool-def:
        description: "Relative path to pool definition file. If not provided will use config/project-{pool-tag}-pool-def.json"
        required: false
        type: string

env:
  SFPOWERSCRIPTS_SPLUNK: ${{ vars.SFPOWERSCRIPTS_SPLUNK }}
  SFPOWERSCRIPTS_SPLUNK_API_KEY: ${{ secrets.SFPOWERSCRIPTS_SPLUNK_API_KEY }}
  SFPOWERSCRIPTS_SPLUNK_HOST: ${{ vars.SFPOWERSCRIPTS_SPLUNK_HOST}}
  DEFAULT_POOL_DEF: "config/project-${{ inputs.pool-tag }}-pool-def.json"

jobs:
  pool:
    name: 'Replenish "${{ inputs.pool-tag }}" pool'
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp-rc:alpha
    timeout-minutes: 720 #Set to Maximum Time out
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.git-ref }}
          fetch-depth: 0

      - name: "npm install"
        run: |
          npm install

      - name: "Authenticate Dev Hub"
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sf auth sfdxurl store -f authfile -a devhub

      # Authenticate to npm
      - uses: actions/setup-node@v3
        with:
          registry-url: "https://npm.pkg.github.com"

      - name: "Prepare a pool of scratch orgs"
        run: "sfp orchestrator:prepare -f ${{ (inputs.pool-def == '' || inputs.pool-def == null) && env.DEFAULT_POOL_DEF || inputs.pool-def }} -v devhub"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish artifacts
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: scratchorg-logs-pool-${{ inputs.pool-tag }}
          path: .sfpowerscripts/prepare_logs
